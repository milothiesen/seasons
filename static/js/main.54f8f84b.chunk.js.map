{"version":3,"sources":["MetAPI.js","SeasonDisplay2.js","Spinner.js","Footer.js","index.js"],"names":["MetAPI","state","primaryImage","accessionNumber","title","season","props","a","this","console","log","Promise","all","axios","get","response","objectIDs","data","randomObject","Math","floor","random","length","artObject","setState","artistDisplayName","creditLine","objectURL","className","style","backgroundImage","href","target","rel","React","Component","seasonConfig","summer","text","searchTerm","winter","SeasonDisplay","lat","month","Date","getMonth","Spinner","message","defaultProps","Footer","App","errorMessage","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","SeasonDisplay2","renderContent","ReactDOM","render","document","querySelector"],"mappings":"8UAIqBA,E,4MACjBC,MAAQ,CACJC,aAAc,GACdC,gBAAiB,GACjBC,MAAO,GACPC,OAAQ,M,8FAGZ,WAAwBC,GAAxB,2BAAAC,EAAA,6DACUF,EAASG,KAAKF,MAAMD,OAC1BI,QAAQC,IAAIL,GAFhB,SAG6BM,QAAQC,IAAI,CACjCC,IAAMC,IAAN,4EACyET,MALjF,0CAGWU,EAHX,KAQUC,EAAYD,EAASE,KAAKD,UAC1BE,EACFF,EAAUG,KAAKC,MAAMD,KAAKE,SAAWL,EAAUM,SACnDb,QAAQC,IAAIQ,GAXhB,UAa4BL,IAAMC,IAC1B,oEACII,GAfZ,QAaUK,EAbV,OAkBIf,KAAKgB,SAAS,CACVtB,aAAcqB,EAAUN,KAAKf,aAC7BE,MAAOmB,EAAUN,KAAKb,MACtBD,gBAAiBoB,EAAUN,KAAKd,gBAChCsB,kBAAmBF,EAAUN,KAAKQ,kBAClCC,WAAYH,EAAUN,KAAKS,WAC3BC,UAAWJ,EAAUN,KAAKU,YAxBlC,iD,2EA2BA,WACI,OACI,qBACIC,UAAU,gBACVC,MAAO,CACHC,gBAAgB,OAAD,OAAStB,KAAKP,MAAMC,aAApB,MAHvB,SAOI,8BACI,oBACI6B,KAAMvB,KAAKP,MAAM0B,UACjBK,OAAO,SACPC,IAAI,sBAHR,UAKI,6BAAKzB,KAAKP,MAAMG,QACfI,KAAKP,MAAME,mBAEhB,gC,GArDgB+B,IAAMC,WCApCC,EAAe,CACjBC,OAAQ,CACJC,KAAM,kCACNC,WAAY,YAEhBC,OAAQ,CACJF,KAAM,kCACNC,WAAY,SAuBLE,EAXO,SAACnC,GACnB,IATeoC,EAAKC,EASdtC,GATSqC,EASUpC,EAAMoC,KATXC,GASgB,IAAIC,MAAOC,YARnC,GAAKF,EAAQ,EACdD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIH,EAEAN,EAAa/B,GAAlCiC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,WACd,OACI,sBAAKX,UAAS,yBAAoBvB,GAAlC,UACI,6BAAKiC,IACL,cAAC,EAAD,CAAQjC,OAAQkC,QC3BtBO,EAAU,SAACxC,GACb,OACI,qBAAKsB,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SAAqCtB,EAAMyC,aAKvDD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCCAG,G,MAZA,kBACX,qBAAKrB,UAAU,SAAf,SACI,oSCEFsB,E,4MACFjD,MAAQ,CAAEyC,IAAK,KAAMS,aAAc,I,uDACnC,WAAqB,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKhC,SAAS,CAAEkB,IAAKc,EAASC,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKnC,SAAS,CAAE2B,aAAcQ,EAAIZ,e,2BAInD,WACI,OAAIvC,KAAKP,MAAMkD,eAAiB3C,KAAKP,MAAMyC,IAChC,0CAAalC,KAAKP,MAAMkD,iBAG9B3C,KAAKP,MAAMkD,cAAgB3C,KAAKP,MAAMyC,IAEhC,cAACkB,EAAD,CAAgBlB,IAAKlC,KAAKP,MAAMyC,MAGpC,cAAC,EAAD,CAASK,QAAQ,qC,oBAI5B,WACI,OACI,gCACI,qBAAKnB,UAAU,UAAf,SAA0BpB,KAAKqD,kBAC/B,8BACI,cAAC,EAAD,a,GA5BF3B,IAAMC,WAmCxB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.54f8f84b.chunk.js","sourcesContent":["import './MetAPI.css';\nimport React from 'react';\nimport axios from 'axios';\n\nexport default class MetAPI extends React.Component {\n    state = {\n        primaryImage: '',\n        accessionNumber: '',\n        title: '',\n        season: null,\n    };\n\n    async componentDidMount(props) {\n        const season = this.props.season;\n        console.log(season);\n        const [response] = await Promise.all([\n            axios.get(\n                `https://collectionapi.metmuseum.org/public/collection/v1/search?q=${season}`\n            ),\n        ]);\n        const objectIDs = response.data.objectIDs;\n        const randomObject =\n            objectIDs[Math.floor(Math.random() * objectIDs.length)];\n        console.log(randomObject);\n        // console.log(season);\n        const artObject = await axios.get(\n            'https://collectionapi.metmuseum.org/public/collection/v1/objects/' +\n                randomObject\n        );\n\n        this.setState({\n            primaryImage: artObject.data.primaryImage,\n            title: artObject.data.title,\n            accessionNumber: artObject.data.accessionNumber,\n            artistDisplayName: artObject.data.artistDisplayName,\n            creditLine: artObject.data.creditLine,\n            objectURL: artObject.data.objectURL,\n        });\n    }\n    render() {\n        return (\n            <div\n                className='primary-image'\n                style={{\n                    backgroundImage: `url(${this.state.primaryImage})`,\n                }}\n            >\n                {/* <img src={this.state.primaryImage} /> */}\n                <p>\n                    <a\n                        href={this.state.objectURL}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <h1>{this.state.title}</h1>\n                        {this.state.accessionNumber}\n                    </a>\n                    <br />\n                </p>\n            </div>\n        );\n    }\n}\n","import './SeasonDisplay.css';\nimport React from 'react';\nimport MetAPI from './MetAPI';\n\nconst seasonConfig = {\n    summer: {\n        text: '*it is warm in your hemisphere*',\n        searchTerm: 'swimming',\n    },\n    winter: {\n        text: '*it is cold in your hemisphere*',\n        searchTerm: 'snow',\n    },\n};\n\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0 ? 'summer' : 'winter';\n    } else {\n        return lat > 0 ? 'winter' : 'summer';\n    }\n};\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, searchTerm } = seasonConfig[season];\n    return (\n        <div className={`season-display ${season}`}>\n            <h1>{text}</h1>\n            <MetAPI season={searchTerm} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Spinner = (props) => {\n    return (\n        <div className='ui active dimmer'>\n            <div className='ui big text loader'>{props.message}</div>\n        </div>\n    );\n};\n\nSpinner.defaultProps = {\n    message: 'Loading...',\n};\n\nexport default Spinner;\n","import './Footer.css';\nimport React from 'react';\n\nconst Footer = () => (\n    <div className='footer'>\n        <p>\n            This site was made based on Stephen Grider's course Modern\n            React/Redux [2020] on Udemy.com. This site reads a users location\n            and determines whether they are in the northern or southern\n            hemisphere and then returns an appropriate art object for that\n            season.\n        </p>\n    </div>\n);\n\nexport default Footer;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay2 from './SeasonDisplay2';\nimport Spinner from './Spinner';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n    state = { lat: null, errorMessage: '' };\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({ lat: position.coords.latitude }),\n            (err) => this.setState({ errorMessage: err.message })\n        );\n    }\n\n    renderContent() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            // return <MetAPI />;\n            return <SeasonDisplay2 lat={this.state.lat} />;\n        }\n\n        return <Spinner message='Please accept location request' />;\n    }\n\n    // react says that we have to define render!!\n    render() {\n        return (\n            <div>\n                <div className='wrapper'>{this.renderContent()}</div>\n                <div>\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}